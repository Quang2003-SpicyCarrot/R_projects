y = "City miles per gallon")
?midwest
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state))
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_continuous()
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_binned()
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_discrete()
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_continuous
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_continuous()
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_continuous() +
scale_x_continuous()
?midwest
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_continuous() +
scale()
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
scale_y_continuous() +
coord_trans()
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
coord_cartesian(xlim = c(0, 1e+06))
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
coord_cartesian(xlim = c(0, 1e+06), ylim = c(0, 1e + 05))
ggplot(data = midwest, aes(popwhite, popblack)) +
geom_point() +
facet_wrap(vars(state)) +
coord_cartesian(xlim = c(0, 1e+06), ylim = c(0, 1e+05))
ggplot(data = mtcars, aes(mpg), color = factor(cyl)) +
geom_histogram() +
ggplot(data = mtcars, aes(mpg), color = factor(cyl)) +
geom_histogram()
ggplot(data = mtcars, aes(mpg), color = factor(cyl)) +
geom_histogram()
ggplot(data = mtcars, aes(mpg), color = factor(cyl)) +
geom_histogram()
mtcars
factor(mtcars$cyl)
ggplot(data = mtcars, aes(mpg), colors = factor(cyl)) +
geom_histogram()
ggplot(data = mtcars, aes(mpg, color = factor(cyl))) +
geom_histogram()
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram()
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram() +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl), size = 10)) +
geom_histogram() +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(size = 10) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(weight = 10) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(weight = 100) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(size = 100) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(bindwidth = 5) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(binwidth = 5) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(binwidth = 1) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(binwidth = 3) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(binwidth = 2) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(binwidth = 2.5) +
facet_grid(cols = vars(am))
ggplot(data = mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram(binwidth = 3) +
facet_grid(cols = vars(am))
mtcars
ggplot(data = mtcars , aes(disp, mpg)) +
geom_point() +
geom_smooth()
ggplot(data = mtcars , aes(disp, mpg)) +
geom_point() +
geom_smooth() +
facet_grid(cols = vars(gear))
ggplot(data = mtcars , aes(disp, mpg)) +
geom_point() +
geom_smooth(method = "lm") +
facet_grid(cols = vars(gear))
source("C:/Users/Dell/Downloads/depMean.R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows.R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
?which
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows.R", echo=TRUE)
source("C:/Users/Dell/Downloads/depMean.R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/depMean (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/depMean (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
View(df)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (1).R", echo=TRUE)
iris
which(iris$Petal.Length - iris$Petal.Width == max(iris$Petal.Length - iris$Petal.Width))
iris$Petal.Length - iris$Petal.Width
max(iris$Petal.Length - iris$Petal.Width)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
df
df$purple - df$white
df
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/depMean (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
which((iris$Petal.Length - iris$Petal.Width) == max(iris$Petal.Length - iris$Petal.Width))
iris$Petal.Length - iris$Petal.Width
max(iris$Petal.Length - iris$Petal.Width)
which((iris$Petal.Length - iris$Petal.Width) == max(max(iris$Petal.Length) - max(iris$Petal.Width)))
subset(iris, subset = (iris$Petal.Length == max(iris$petal.Length)))
subset(iris, subset = (Petal.Length == max(iris$petal.Length)))
subset(iris, subset = (Petal.Length == max(iris$Petal.Length)))
which(subset(iris, subset = (Petal.Length == max(iris$Petal.Length))))
row(subset(iris, subset = (Petal.Length == max(iris$Petal.Length)))0
row(subset(iris, subset = (Petal.Length == max(iris$Petal.Length)))0)
which(c(iris$Sepal.Length == max(iris$Sepal.Length), iris$Sepal.Width == max(iris$Sepal.Width)))
df <- which(c(df$purple == max(df$purple), df$white == max(df$white)))
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
which(iris$Sepal.Length - iris$Sepal.Width == (max(iris$Sepal.Length) - max(iris$Sepal.Width)))
which(iris$Sepal.Length - iris$Petal.Length == (max(iris$Sepal.Length) - max(iris$Petal.Length)))
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
v <- c(1,1,1,1,1, 2,2,3)
which.min(v)
which.min(v)
(v == min(v))
v <- c(1,1,1,1,1, 2,2,3)
which.min(v)
which(v == min(v))
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
v <- c(1,1,1,1,1, 2,2,3)
which.min(v)
which(v == min(v))
?which.min
which(v == max(v))
v <- c(1,1,1,1,1, 2,2,3)
which.max(v)
which(v == max(v))
v <- c(1,1,1,1,1, 3,2,3)
which.max(v)
which(v == max(v))
source("C:/Users/Dell/Downloads/depMean (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractRows (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/extractCondRows (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/depMean (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
return (which.max(df))
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
return (which.max(df$purple - df$white == (max(df$purple - df$white))))
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (2).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
which.max(iris)
which.max(iris$Sepal.Length - iris$Sepal.Width)
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
which.(iris$Sepal.Length - iris$Sepal.Width == max(iris$Sepal.Length - iris$Sepal.Width))
which(iris$Sepal.Length - iris$Sepal.Width == max(iris$Sepal.Length - iris$Sepal.Width))
which.max(iris$Sepal.Length - iris$Sepal.Width)
which(iris$Sepal.Length - iris$Sepal.Width == max(iris$Sepal.Length - iris$Sepal.Width))
source("C:/Users/Dell/Downloads/rowNumber (3).R", echo=TRUE)
head(iris)
library(tidyverse)
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Wdith)) +
geom_point()
iris
head(iris)
library(tidyverse)
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Wdith)) +
geom_point()
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width)) +
geom_point()
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width, color = factor(Species))) +
geom_point() +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width, color = factor(species))) +
geom_point() +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width)) +
geom_point(color = factor(Species)) +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width), color = Species) +
geom_point() +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width, colors = factor(Species))) +
geom_point() +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width
col = Species)) +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width,
col = Species)) +
geom_point() +
ggplot(data = iris, mapping = aes(x = Sepal.Length, y= Sepal.Width,
col = Species)) +
geom_point() +
head(iris)
library(tidyverse)
ggplot(data = iris,
mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
ggplot(data = iris,
mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
ggplot(data = iris,
mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
ggplot(data = iris,
mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point()
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point()
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth()
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth() +
theme_bw()
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth() +
theme_dark(0)
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth() +
theme_dark()
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth() +
theme_minimal()
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth(size = 3, method = "lm", aes(col = Species))
ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth(method = "lm", aes(col = Species))
p=ggplot(data = iris, mapping = aes(x = Sepal.Length,
y= Sepal.Width,
col = Species)) +
geom_point() +
labs(
title = "Height vs Length",
x = "Length",
y= "Height",
) +
geom_smooth(method = "lm", aes(col = Species))
ggplotly(p)
library(plotly)
install.package("plotly")
install.packages("plotly")
library(plotly)
ggplotly(p)
return (which.max(df$pink - df$black))
source("C:/Users/Dell/Downloads/rowNumber.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
#sales volume of ST03
s2 <- aggregate(sales ~ storetype_id, data = merged_da_tab, sum)[3,]
#sales volume of ST03
s2 <- aggregate(sales ~ storetype_id, data = merged_da_tab, sum)[3,]
#right join dataset d and a according to the corresponding id:
merged_da_tab <- d %>%
select("store_id", "storetype_id", "store_size") %>%
right_join(a, by =  c("store_id" = "store_id"))
library(nycflights13)
install.packages('nycflights13')
library(nycflights13)
nycflights13::
nycflights13::airlines
nycflights13::airports
nycflights13::flights
nycflights13::planes
nycflights13::weather
nycflights13::airlines
airli
airlines
flights
View(flights)
attach(flights)
library(nycflights13)
#2
flights %>%
left_join(planes, by = c("year" = "year")) %>%
View()
library(nycflights13)
library(tidyverse)
#2
flights %>%
left_join(planes, by = c("year" = "year")) %>%
View()
head(airports)
#2
flights %>%
left_join(planes, by = "year") %>%
View()
gc()
head(flights)
head(flights)
gc()
library(nycflights13)
library(DBI)
library(tidyverse)
flights %>%
right_join(weather)
flights %>%
full_join(airports)
flights %>%
left_join(planes)
#1
flights %>%
inner_join(airlines)
#5
airports %>%
right_join(weather)
#5
head(airports)
head(weather)
#6
head(flights)
head(airports)
airlines
# Question 3: -------------------------------------------------------------
#1
head(weather)
head(flights)
flights %>%
subset(dep_delay + arr_delay >= 10)
# Question 3: -------------------------------------------------------------
#1
head(weather)
head(flights)
flights %>%
subset(dep_delay + arr_delay >= 10) %>%
left_join(weather)
flights %>%
subset(dep_delay + arr_delay >= 10) %>%
left_join(weather) %>%
View()
flights %>%
subset(dep_delay + arr_delay >= 10) %>%
left_join(weather$temp)
flights %>%
subset(dep_delay + arr_delay >= 10) %>%
left_join(weather)
flights %>%
subset(dep_delay + arr_delay >= 10) %>%
left_join(weather) %>%
select(temp)
gc()
knitr::opts_chunk$set(echo = TRUE)
#summarise the total revenue made from each store_id over the seven days
revenue_seven <- aggregate(revenue ~ store_id,
data = a,
FUN = sum) #use sum to calculate the total revenue
#summarise the total revenue made from each store_id over the seven days
revenue_seven <- aggregate(revenue ~ store_id,
data = a,
FUN = sum) #use sum to calculate the total revenue
source("~/WSU RStudio/Semester 1 - Analytics Programming/Assignment 1 (40%)/Assignment1.R")
#total revenue over the seven day period
revenue_seven <- aggregate(revenue ~ store_id, data = a, sum)
revenue_seven
head(revenue_seven)
revenue_seven$store_id[2]
revenue_seven$store_id[50]
